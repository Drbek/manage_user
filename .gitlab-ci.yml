# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - quality
  - deploy
build-job:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH!="main" && $CI_COMMIT_BRANCH!="develop"
      allow_failure: true
    #- if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - echo "Starting building....."
    - mvn compile -o
    - echo "build finished successfully"
test-job:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH!="main" && $CI_COMMIT_BRANCH!="develop"
      allow_failure: true  
  script:
    - echo "Starting testing....."
    - mvn test -o
    - echo "test finished successfully"
quality-job:
  stage: quality
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH!="main" && $CI_COMMIT_BRANCH!="develop"
      allow_failure: true
  script:
    - echo "Starting test quality....."
    - mvn compile -o
    - echo "quality test finished successfully"
deploy-job:      # This job runs in the deploy stage.
  tags:
    - first
    - test
    - windows
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH=="main"
      allow_failure: true  
  script:
    - echo "Deployment..........."
    - cd ..
    - git clone https://gitlab.com/bekonrolang/manage_user.git tmp_repo
    - cd tmp_repo
    - dpl --provider=heroku --strategy=git --git=https://git.heroku.com/mysterious-scrubland-19985.git --api_key=0dbebf2d-ca81-4288-a0f6-818f3f1b1a30 --app=mysterious-scrubland-19985
    - cd ..
    - Remove-Item .\tmp_repo\ -Recurse -Force -Confirm:$false
